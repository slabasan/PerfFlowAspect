name: PerfFlowAspect CI

on: [ push, pull_request ]

jobs:

  build-c:
    name: check c bindings
    runs-on: ubuntu-18.04

    steps:
      # Checkout PerfFlowAspect repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Setup Build Env
        run: |
          sudo apt-get update
          sudo apt-get remove clang-9 llvm-9
          sudo apt install llvm-dev clang libjansson-dev libssl-dev bison flex make cmake
          sudo find / -print | grep *Clang*.cmake
          #sudo ln -sf /usr/bin/clang-7 /usr/bin/clang
          #sudo ln -sf /usr/bin/clang++-7 /usr/bin/clang++
          which clang++
          clang++ --version

      - name: Compile check
        run: |
          cd src/c
          mkdir build install
          cd build
          export CMAKE_OPTS="-DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../install"
          export CMAKE_MODULE_PATH=/usr/lib/llvm-6.0/lib/cmake/clang:$CMAKE_MODULE_PATH
          echo -e ${CMAKE_OPTS}
          cmake ${CMAKE_OPTS} ..
          # build
          make VERBOSE=1
          # install
          make install

      - name: Run C Smoke Tests
        run: |
          cd src/c/install/test
          ./t0001-cbinding-basic.t

  build-python:
    name: check python bindings
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      # Checkout PerfFlowAspect repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip pytest setuptools
          cd src/python
          python setup.py install
          python -m pip list

      - name: Update black and flake8
        if: ${{ matrix.python-version == 3.7 }}
        run: |
          python -m pip install --upgrade black flake8

      - name: Format check with flake8 and black
        if: ${{ matrix.python-version == 3.7 }}
        run: |
          cd src/python
          black --diff --check .
          flake8

      - name: Run Python Smoke Tests
        run: |
          cd src/python/test
          ./t0001-pybinding-basic.t
